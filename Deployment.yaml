apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextjs-deployment
  namespace: demo-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nextjs
  template:
    metadata:
      labels:
        app: nextjs
    spec:
      containers:
        - name: nextjs-app
          image: english-learning-app:latest
          ports:
            - containerPort: 3000
          env:
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
            - name: API_KEY
              value: "8DnL5+4u0fKfvQ/48ArIAg==gcor4LB7WLzwuM8f"
            - name: CACHE_TTL
              value: "300"
          volumeMounts:
            - name: prometheus-metrics
              mountPath: /etc/prometheus
            - name: redis-volume
              mountPath: /data

      volumes:
        - name: prometheus-metrics
          configMap:
            name: prometheus-config
        - name: redis-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: nextjs-service
  namespace: demo-ns
spec:
  selector:
    app: nextjs
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: demo-ns
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: demo-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: ghcr.io/aut-cloud-computing-fall-2024/redis:latest
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: demo-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: demo-ns
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'nextjs-app'
        static_configs:
          - targets: ['nextjs-service:3000']
